#!/bin/bash 
# Upgrade script for device's software V 3.0.0

DATE=`date '+%D %H:%M:%S'`
TIMESTAMP=`date '+%Y%m%d%H%M%S'`
TEMP=/tmp/.upgrade
NEEDSAVE=0

if [ -f /etc/cy_buffering.sh ]
then 
    #Move files to destination
    for files in cy_buffering.sh inetd.sh ipsec.sh kvmd.sh lpd.sh ntpclient.conf pmd.sh portmap.conf snmpd.sh sshd.sh syslog.sh webui.conf ypbind.conf
    do
        if [ -f /etc/$files ]
        then
            mv /etc/$files /etc/daemon.d/ 
        fi
    done

    mv /etc/daemon.d/webui.conf /etc/daemon.d/webui.tmp
    awk  '$1 ~ /^ShellInit=/ { print "ShellInit=/bin/firstkssl.sh   # Performs any required initialization"; next }; { print $0 };' /etc/daemon.d/webui.tmp > /etc/daemon.d/webui.conf

    #Update the references in /etc/config_files
    if [ -f /etc/config_files ]
    then
         egrep -v "cy_buffering.sh|inetd.sh|ipsec.sh|kvmd.sh|lpd.sh|ntpclient.conf|pmd.sh|portmap.conf|snmpd.sh|sshd.sh|syslog.sh|webui.conf|ypbind.conf" /etc/config_files > ${TEMP}
         echo "/etc/daemon.d/*" >> ${TEMP}
         cp /etc/config_files /etc/config_files.bkp_${TIMESTAMP}
         echo "${DATE} - Backup of config_files was done. It should be found in /etc/config_files.bkp_${TIMESTAMP}" 
         mv ${TEMP} /etc/config_files
    else
         echo "${DATE} - The file /etc/config_files was not found." >> $LOGFILE
    fi
    NEEDSAVE=1
fi

# Add new shared memory init to inittab
if [ -f /etc/inittab ]; then
        if ! grep -q updconf /etc/inittab; then
                echo "# initialize shared memory configuration" >> /etc/inittab
                echo "::wait:/bin/updconf -f -q" >> /etc/inittab
                echo "Updated /etc/inittab" 
		NEEDSAVE=1
        fi
fi

# Correct TIMEZONE var in /etc/daemon.d/ntpclient.conf, if needed
if [ -f /etc/daemon.d/ntpclient.conf ]; then
    TZadj=`grep TIMEZONE /etc/daemon.d/ntpclient.conf`
    if [ $TZadj ]; then
        TZadj=${TZadj:9}
        if [ "x$TZadj" != "xCustom" ] && [ "x${TZadj:0:3}" != "xgmt" ]; then
            if [ "x${TZadj:3:1}" = "x+" ]; then
                TZadj=gmt-${TZadj:4}
            elif [ "x${TZadj:3:1}" = "x-" ]; then
                TZadj=gmt+${TZadj:4}
            else
                TZadj=gmt
            fi
            grep -v TIMEZONE /etc/daemon.d/ntpclient.conf > /tmp/ntpclient.conf 2>&1
            echo "TIMEZONE=$TZadj" >> /tmp/ntpclient.conf
            mv /tmp/ntpclient.conf /etc/daemon.d
            echo "TIMEZONE var was adjusted to the new format in /etc/daemon.d/ntpclient.conf"
            NEEDSAVE=1
        fi
    fi
fi

# Include the events notification in the syslog-ng.conf file
if [ -f /etc/syslog-ng/syslog-ng.conf ]; then 
        if ! grep -q evt_syslog_pipe /etc/syslog-ng/syslog-ng.conf; then
                echo "# events notification " >> /etc/syslog-ng/syslog-ng.conf
                echo "source s_evt { pipe(\"/var/run/evt_syslog_pipe\"); };" >> /etc/syslog-ng/syslog-ng.conf
                echo "log { source(s_evt); destination(console); };" >> /etc/syslog-ng/syslog-ng.conf
                echo "Updated /etc/syslog-ng/syslog-ng.conf" 
		NEEDSAVE=1
        fi
fi

# Include the events notification in the syslog-ng.conf file
if [ -f /etc/config_files ]; then 
        if ! grep -q event_notif.conf /etc/config_files; then
                echo "/etc/event_notif.conf" >> /etc/config_files
                echo "/etc/event_notif.lnk" >> /etc/config_files
                echo "/etc/logpipe/logpipe.conf" >> /etc/config_files
                echo "/etc/adsap2.conf" >> /etc/config_files
                echo "/etc/CA/ssh_appliance_key" >> /etc/config_files
                echo "Updated /etc/config_files" 
		NEEDSAVE=1
        fi
        if  grep -q rc.sysinit /etc/config_files; then
# the rc.sysinit was customized by the client
        	if ! grep -q /var/run/evt_syslog_pipe /etc/rc.sysinit; then
                	echo "# create the fifo devices for event notifications" >> /etc/rc.sysinit
	                echo "mkfifo -m 666 /var/run/snmp_pipe" >> /etc/rc.sysinit
        	        echo "mkfifo -m 666 /var/run/evt_syslog_pipe" >> /etc/rc.sysinit
	               	echo "mkfifo -m 666 /dev/evt_pipe_logpipe" >> /etc/rc.sysinit
        	        echo "Updated /etc/rc.sysinit" 
			NEEDSAVE=1
		fi
	fi
        if  grep -q daemon_list /etc/config_files; then
# the daemon_list was customized by the client
        	if ! grep -q EVTGEN /etc/daemon_list; then
                	echo "EVTGEN      /etc/daemon.d/event_gen.sh" >> /etc/daemon_list
	                echo "LOGPIPE     /etc/daemon.d/logpipe.sh" >> /etc/daemon_list
        	        echo "ADSAP2      /etc/daemon.d/adsap2.sh" >> /etc/daemon_list
                	echo "Updated /etc/daemon_list" 
			NEEDSAVE=1
		fi
	fi
fi

# verify the "admin" user and the "admin" group
if ! grep -q "^admin:" /etc/passwd; then
	SEC=`echo $SECONDS`
	set RANDOM=$SEC
	AD1=`echo $RANDOM``echo $RANDOM`
	AD2=`echo $RANDOM``echo $RANDOM`
	ADMPAS="AD"${AD1:2:2}${AD2:1:3}${AD1:6:2}${AD2:5:2}
	adduser -g admin -G admin -P $ADMPAS admin
	echo '***************************************************************************'
        echo 'For DSView the "admin" user account was created with one randomly password.'
	echo 'After log-in as root, run the "passwd" command to change its.'
	echo '***************************************************************************'
else
	if ! grep -q "[,:]admin" /etc/group; then
		echo '**************************************************************'
		echo 'For DSView the "admin" user must be a member of "admin" group.'
		echo 'After log-in as root, run the "addadmin" command.'
		echo '**************************************************************'
	fi
fi

if ! grep -q "^PIDF" /etc/daemon.d/sshd.sh; then
  echo "PIDF=/var/run/sshd.pid" >> /etc/daemon.d/sshd.sh
  NEEDSAVE=1
fi

if [ -f /etc/daemon.d/snmpd.sh ]; then
    if [ ! -e /etc/snmp/snmpd.local.conf ]; then
	touch /etc/snmp/snmpd.local.conf
    fi
    if grep -q "Performs any required initialization" /etc/daemon.d/snmpd.sh; then
    mv /etc/daemon.d/snmpd.sh /etc/daemon.d/snmpd.sh-
    cat > /tmp/upgrade.sed <<EOF
s/^ShellInit=.*/ShellInit="rm -f \/var\/net-snmp\/snmpd.conf"/
s/^ConfigFiles=.*/ConfigFiles="\/etc\/snmp\/snmpd.conf \/etc\/snmp\/snmpd.local.conf"/
EOF

    sed -f /tmp/upgrade.sed /etc/daemon.d/snmpd.sh- > /etc/daemon.d/snmpd.sh
    rm /etc/daemon.d/snmpd.sh-
    chmod 755 /etc/daemon.d/snmpd.sh
fi
fi

#Validate all modification
if [ $NEEDSAVE = 1 ]
then
    /bin/saveconf 
fi
