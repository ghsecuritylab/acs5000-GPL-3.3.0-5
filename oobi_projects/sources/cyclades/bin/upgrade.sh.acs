#!/bin/bash 
# Upgrade script for device's software V 3.2.1

DATE=`date '+%D %H:%M:%S'`
TIMESTAMP=`date '+%Y%m%d%H%M%S'`
TEMP=/tmp/.upgrade
LOGFILE=/tmp/.upgrade.log
NEEDSAVE=0

if [ -f /etc/cy_buffering.sh ]
then 
    #Move files to destination
    for files in cy_buffering.sh inetd.sh ipsec.sh lpd.sh ntpclient.conf pmd.sh portmap.conf snmpd.sh sshd.sh syslog.sh webui.conf ypbind.conf
    do
        if [ -f /etc/$files ]
        then
            mv /etc/$files /etc/daemon.d/ 
        fi
    done

    if [ -f /etc/kvmd.sh ]; then
        rm -f /etc/kvmd.sh
        echo "Removed /etc/kvmd.sh"
    fi

    mv /etc/daemon.d/webui.conf /etc/daemon.d/webui.tmp
    awk  '$1 ~ /^ShellInit=/ { print "ShellInit=/bin/firstkssl.sh   # Performs any required initialization"; next }; { print $0 };' /etc/daemon.d/webui.tmp > /etc/daemon.d/webui.conf

    #Update the references in /etc/config_files
    if [ -f /etc/config_files ]
    then
         egrep -v "cy_buffering.sh|inetd.sh|ipsec.sh|kvmd.sh|lpd.sh|ntpclient.conf|pmd.sh|portmap.conf|snmpd.sh|sshd.sh|syslog.sh|webui.conf|ypbind.conf" /etc/config_files > ${TEMP}
         echo "/etc/daemon.d/*" >> ${TEMP}
         cp /etc/config_files /etc/config_files.bkp_${TIMESTAMP}
         echo "${DATE} - Backup of config_files was done. It should be found in /etc/config_files.bkp_${TIMESTAMP}" 
         echo "${DATE} - Backup of config_files was done. It should be found in /etc/config_files.bkp_${TIMESTAMP}" >>$LOGFILE
         mv ${TEMP} /etc/config_files
    else
         echo "${DATE} - The file /etc/config_files was not found." >> $LOGFILE
    fi
    NEEDSAVE=1
fi

# Add new shared memory init to inittab
if [ -f /etc/inittab ]; then
	# upgrade for 3.1.0-1
	if grep -q "/etc/inittab" /etc/config_files; then
    		FWSET=`grep -n "fwset" /etc/inittab | cut -d":" -f 1`
    		UPDCONF=`grep -n "updconf" /etc/inittab | cut -d":" -f 1`
		if [ $FWSET -gt $UPDCONF ]; then
		echo "WARNING: the /etc/inittab file was changed for fix problem in clustering"
		echo "         environment."
		echo "         Please, check the changes in the /etc/inittab.save file."
		echo "         And if necessary, update your customized /etc/inittab file."
		fi
	fi
	# upgrade for 3.2.0
	if ! grep -q "/etc/rc\.shutdown" /etc/inittab; then
		echo "# System shutdown" >> /etc/inittab
        	echo "::shutdown:/etc/rc.shutdown" >> /etc/inittab
        	echo "Updated /etc/inittab" 
		NEEDSAVE=1
	fi
fi

# Correct TIMEZONE var in /etc/daemon.d/ntpclient.conf, if needed
if [ -f /etc/daemon.d/ntpclient.conf ]; then
    TZadj=`grep TIMEZONE /etc/daemon.d/ntpclient.conf`
    if [ $TZadj ]; then
        TZadj=${TZadj:9}
        if [ "x$TZadj" != "xCustom" ] && [ "x${TZadj:0:3}" != "xgmt" ]; then
            if [ "x${TZadj:3:1}" = "x+" ]; then
                TZadj=gmt-${TZadj:4}
            elif [ "x${TZadj:3:1}" = "x-" ]; then
                TZadj=gmt+${TZadj:4}
            else
                TZadj=gmt
            fi
            grep -v TIMEZONE /etc/daemon.d/ntpclient.conf > /tmp/ntpclient.conf 2>&1
            echo "TIMEZONE=$TZadj" >> /tmp/ntpclient.conf
            mv /tmp/ntpclient.conf /etc/daemon.d
            echo "TIMEZONE var was adjusted to the new format in /etc/daemon.d/ntpclient.conf"
            NEEDSAVE=1
        fi
    fi
fi

# Include the events notification in the syslog-ng.conf file
if [ -f /etc/syslog-ng/syslog-ng.conf ]; then 
        if ! grep -q evt_syslog_pipe /etc/syslog-ng/syslog-ng.conf; then
                echo "# events notification " >> /etc/syslog-ng/syslog-ng.conf
                echo "source s_evt { pipe(\"/var/run/evt_syslog_pipe\"); };" >> /etc/syslog-ng/syslog-ng.conf
                echo "log { source(s_evt); destination(console); };" >> /etc/syslog-ng/syslog-ng.conf
                echo "Updated /etc/syslog-ng/syslog-ng.conf" 
		NEEDSAVE=1
        fi
fi

# Include the events notification in the syslog-ng.conf file
if [ -f /etc/config_files ]; then 
        if ! grep -q "event_notif\.conf" /etc/config_files; then
                echo "/etc/event_notif.conf" >> /etc/config_files
                echo "/etc/event_notif.lnk" >> /etc/config_files
                echo "/etc/logpipe/logpipe.conf" >> /etc/config_files
                echo "/etc/adsap2.conf" >> /etc/config_files
                echo "/etc/CA/ssh_appliance_key" >> /etc/config_files
                echo "Updated /etc/config_files" 
		NEEDSAVE=1
        fi
        if  grep -q "rc\.sysinit" /etc/config_files; then
# the rc.sysinit was customized by the client
        	if ! grep -q "/var/run/evt_syslog_pipe" /etc/rc.sysinit; then
                	echo "# create the fifo devices for event notifications" >> /etc/rc.sysinit
	                echo "mkfifo -m 666 /var/run/snmp_pipe" >> /etc/rc.sysinit
        	        echo "mkfifo -m 666 /var/run/evt_syslog_pipe" >> /etc/rc.sysinit
	               	echo "mkfifo -m 666 /dev/evt_pipe_logpipe" >> /etc/rc.sysinit
        	        echo "Updated /etc/rc.sysinit" 
			NEEDSAVE=1
		fi
	fi
        if  grep -q daemon_list /etc/config_files; then
# the daemon_list was customized by the client
        	if ! grep -q EVTGEN /etc/daemon_list; then
                	echo "EVTGEN      /etc/daemon.d/event_gen.sh" >> /etc/daemon_list
	                echo "LOGPIPE     /etc/daemon.d/logpipe.sh" >> /etc/daemon_list
        	        echo "ADSAP2      /etc/daemon.d/adsap2.sh" >> /etc/daemon_list
                	echo "Updated /etc/daemon_list" 
			NEEDSAVE=1
		fi
	fi
        if ! grep -q "pmd\.conf" /etc/config_files; then
		echo "/etc/pmd.conf" >> /etc/config_files
		echo "/etc/pmdgrp.conf" >> /etc/config_files
		echo "/etc/pmd.users" >> /etc/config_files
		NEEDSAVE=1
	fi
fi

# verify the "admin" user and the "admin" group
if ! grep -q "^admin:" /etc/passwd; then
	SEC=`echo $SECONDS`
	set RANDOM=$SEC
	AD1=`echo $RANDOM``echo $RANDOM`
	AD2=`echo $RANDOM``echo $RANDOM`
	ADMPAS="AD"${AD1:2:2}${AD2:1:3}${AD1:6:2}${AD2:5:2}
	adduser -g admin -G admin -P $ADMPAS admin
	echo '***************************************************************************'
        echo 'For DSView the "admin" user account was created with one randomly password.'
	echo 'After log-in as root, run the "passwd" command to change its.'
	echo '***************************************************************************'
else
	if ! grep -q "[,:]admin" /etc/group; then
		echo '**************************************************************'
		echo 'For DSView the "admin" user must be a member of "admin" group.'
		echo 'After log-in as root, run the "addadmin" command.'
		echo '**************************************************************'
	fi
fi

if ! grep -q "^PIDF" /etc/daemon.d/sshd.sh; then
  echo "PIDF=/var/run/sshd.pid" >> /etc/daemon.d/sshd.sh
  NEEDSAVE=1
fi

# verify PM and upgrade the PM configuration
if grep -q "^s[0-9]*\.protocol[ 	]*ipdu" /etc/portslave/pslave.conf; then
   /bin/upgrade_power.sh
   echo "Updated Power Configuration" 
   NEEDSAVE=1
fi

if ! grep -q "pmd\.conf" /etc/daemon.d/pmd.sh; then
   cp /etc/daemon.d/pmd.sh.save /etc/daemon.d/pmd.sh
   echo "Updated pmd.sh file" 
   NEEDSAVE=1
fi
 
#if grep -q "^tty" /etc/pmd.conf; then
  # verify duplicated lines in the pmd.conf file
#  mv /etc/pmd.conf /etc/pmd.temp
#  awk ' $1 ~ /^ttyS/ { \
#          split ($1,s,":"); \
#          port=substr(s[1],2); \
#          if (port in ttyD) { next; } \
#          ttyD[port]=port; \
#        } \
#        { \
#          print $0; \
#          next; \
#        }\
#     ' /etc/pmd.temp > /etc/pmd.conf
#  if ! cmp -s /etc/pmd.temp /etc/pmd.conf; then
#      echo "Updated Power Configuration" 
#      NEEDSAVE=1
#  fi
#  rm /etc/pmd.temp
#fi

#upgrade for 3.2.0
if ! grep -q " ;; " /etc/syslog-ng/syslog-ng.conf; then
	awk -f /bin/awk_syslog /etc/syslog-ng/syslog-ng.conf > /tmp/syslog-ng.conf.tmp
	cp /tmp/syslog-ng.conf.tmp /etc/syslog-ng/syslog-ng.conf
	rm -f /tmp/syslog-ng.conf.tmp
        echo "Updated Syslog-ng Configuration"
        NEEDSAVE=1
fi

#upgrade for 3.2.0
if grep -q "authserver" /etc/adsap2.conf; then

	awk ' $1 ~ /^#?authserver/ { \
           if (substr($2, length($2)) != ",") \
              $2 = $2 "," \
	   } \
	   { \
              print $0 \
	   } \
	   ' /etc/adsap2.conf > /tmp/adsap2.conf.tmp

	if ! cmp -s /etc/adsap2.conf /tmp/adsap2.conf.tmp; then
		cp /tmp/adsap2.conf.tmp /etc/adsap2.conf
		echo "Updated ADSAP2 Configuration"
		NEEDSAVE=1
	fi

	rm -f /tmp/adsap2.conf.tmp
fi

#upgrade for 3.2.0
if ! grep -q "Enable IPv4 configuration" /etc/portslave/pslave.conf; then

	awk ' /Ethernet configuration/ { \
		  print "# Enable IPv4 configuration"; \
		  print "#"; \
		  print "# This parameter is used to enable or disable the configuration of IPv4"; \
		  print "# addresses."; \
		  print "# Valid entries are: yes or 1 and no or 0."; \
		  print "#"; \
		  print "conf.enableIPv4 yes"; \
		  print ""; \
		  print "#"; \
		  print "# Enable IPv6 configuration"; \
		  print "#"; \
		  print "# This parameter is used to enable or disable the configuration of IPv6"; \
		  print "# addresses."; \
		  print "# Valid entries are: yes or 1 and no or 0."; \
		  print "#"; \
		  print "conf.enableIPv6 no"; \
		  print ""; \
		  print "#"; \
		} \
		{ \
		  print $0; \
		} \
	' /etc/portslave/pslave.conf > /tmp/pslave.conf.tmp

	cp /tmp/pslave.conf.tmp /etc/portslave/pslave.conf
	rm -f /tmp/pslave.conf.tmp

	echo "Updated Portslave IPv4/IPv6 Configuration"
	NEEDSAVE=1
fi

#upgrade for 3.2.0
if ! grep -q "AIDP" /etc/daemon_list; then
	echo "AIDP        /etc/daemon.d/aidp.sh" >> /etc/daemon_list
	echo "Updated /etc/daemon_list"
	NEEDSAVE=1
fi

#upgrade for 3.2.0
if grep -q "DSIG" /etc/daemon.d/inetd.sh; then

	awk '$1 ~ /^DSIG=hup/ { \
              print "DSIG=term       # signal to stop/restart the daemon (lowercase)"; \
	      next; \
	   } \
	   { \
              print $0; \
	   } \
	   ' /etc/daemon.d/inetd.sh > /tmp/inetd.sh.temp

	if ! cmp -s /etc/daemon.d/inetd.sh /tmp/inetd.sh.temp; then
		cp /tmp/inetd.sh.temp /etc/daemon.d/inetd.sh
		echo "Updated /etc/daemon.d/inetd.sh"
		NEEDSAVE=1
	fi

	rm -f /tmp/inetd.sh.temp
fi

# upgrade for 3.2.0
if [ -f /etc/daemon.d/kvmd.sh ]; then
	rm -f /etc/daemon.d/kvmd.sh
	echo "Removed /etc/daemon.d/kvmd.sh"
	NEEDSAVE=1

	if grep -q -F '/etc/daemon.d/kvmd.sh' /etc/config_files; then
		grep -v -F '/etc/daemon.d/kvmd.sh' /etc/config_files > /etc/config_files.temp
		mv -f /etc/config_files.temp /etc/config_files
	fi
fi

#upgrade for 3.2.0
if grep -q "\/etc\/pam_smb\.conf" /etc/config_files; then

	awk '$1 ~ /^\/etc\/pam_smb\.conf/ { \
	      next; \
	   } \
	   { \
              print $0; \
	   } \
	   ' /etc/config_files > /etc/config_files.temp

	if ! cmp -s /etc/config_files /etc/config_files.temp; then
		cp /etc/config_files.temp /etc/config_files
		echo "Updated /etc/config_files"
		NEEDSAVE=1
	fi

	rm -f /etc/config_files.temp
fi
if ! grep -q "modprobe\.conf" /etc/config_files; then
	echo "/etc/modprobe.conf" >> /etc/config_files
	NEEDSAVE=1
fi

#upgrade for 3.2.0
awk ' /IPTables restore rules saved in/ { next; } \
      /::wait:\/bin\/fwset restore/ { next; } \
      /::once:\/bin\/cy_ras/ { next; } \
      /initialize shared memory configuration/ { next; } \
      /::wait:\/bin\/updconf -f -q/ { next; } \
      { print $0; } \
   ' /etc/inittab > /etc/inittab.temp

if ! cmp -s /etc/inittab /etc/inittab.temp; then
	cp /etc/inittab.temp /etc/inittab
	echo "Updated /etc/inittab"
	NEEDSAVE=1
fi
rm -f /etc/inittab.temp

#upgrade for 3.2.0
if [ -f /etc/network/ifcfg_lo ]; then
	mv /etc/network/ifcfg_lo /etc/network/_ifcfg_lo
fi
if [ -f /etc/network/ifcfg_eth0 ]; then
	rm -f /etc/network/ifcfg_*
	echo "Removed /etc/network/ifcfg_* files"
	NEEDSAVE=1
fi
if [ -f /etc/network/_ifcfg_lo ]; then
	mv /etc/network/_ifcfg_lo /etc/network/ifcfg_lo
fi

#upgrade for 3.2.0
if ! grep -q "/etc/network/firewall6" /etc/config_files; then
	echo "/etc/network/firewall6" >> /etc/config_files
	NEEDSAVE=1
fi

#upgrade for 3.2.0
if ! grep -q "source \/etc\/ssl_version.conf" /etc/daemon.d/webui.conf; then

	awk '$1 ~ /^ENABLE=/ { \
                print "source /etc/ssl_version.conf"; \
                print ""; \
        } \
	$1 ~ /^SSLVER=/ { \
                if (substr($0, 12, 1) == "2") \
                   print "SSLVER=SSLv2"; \
                else if (substr($0, 12, 1) == "3") \
                   print "SSLVER=SSLv3"; \
                else \
                   print "SSLVER=SSLv23"; \
                next; \
        } \
	$1 ~ /^DPARM=/ { \
                print "case \"$SSLVER\" in"; \
                print "'SSLv2') SSLVER=\"-v 2\" ;;"; \
                print "'SSLv3') SSLVER=\"-v 3\" ;;"; \
                print "     *) SSLVER=\"\" ;;"; \
                print "esac"; \
        } \
        { \
                print $0; \
        } \
	' /etc/daemon.d/webui.conf > /tmp/webui.conf.temp

	if ! cmp -s /etc/daemon.d/webui.conf /tmp/webui.conf.temp; then
		cp /tmp/webui.conf.temp /etc/daemon.d/webui.conf
		echo "Updated /etc/daemon.d/webui.conf"
		NEEDSAVE=1
	fi

	rm -f /tmp/webui.conf.temp
fi

#upgrade for 3.2.0
awk '$1 ~ /^SSLv/ {
		print "SSLVER="$1;
		next;
        }
        {
                print $0;
        }
   ' /etc/ssl_version.conf > /tmp/ssl_version.conf.temp

if ! cmp -s /etc/ssl_version.conf /tmp/ssl_version.conf.temp; then
	cp /tmp/ssl_version.conf.temp /etc/ssl_version.conf
	echo "Updated /etc/ssl_version.conf"
	NEEDSAVE=1
fi
rm -f /tmp/ssl_version.conf.temp

#upgrade for 3.2.0
if ! grep -q "/etc/ssl_version.conf" /etc/config_files; then
        echo "/etc/ssl_version.conf" >> /etc/config_files
        NEEDSAVE=1
fi

#upgrade for 3.2.0
if grep -q "ulimit" /etc/profile; then

	awk '$1 ~ /^ulimit/ { \
	      print "ulimit -c 0"; \
	      next; \
	   } \
	   { \
              print $0; \
	   } \
	   ' /etc/profile > /etc/profile.temp

	if ! cmp -s /etc/profile /etc/profile.temp; then
		cp /etc/profile.temp /etc/profile
		echo "Updated /etc/profile"
		NEEDSAVE=1
	fi

	rm -f /etc/profile.temp
fi

#upgrade for 3.2.1
if ! grep -q "\$SSLCIPHER" /etc/daemon.d/webui.conf; then
	cp /etc/daemon.d/webui.conf /tmp/webui.conf
	awk -f /bin/awk_webui /tmp/webui.conf > /etc/daemon.d/webui.conf
	rm /tmp/webui.conf
	NEEDSAVE=1
fi

#Updates the /etc/online_help URL
if [ -f /etc/online_help ]; then
	if grep -q "www\.cyclades\.com" /etc/online_help; then
		echo "http://global.avocent.com/us/olh/" > /etc/online_help
		NEEDSAVE=1
	fi
fi


# update the /etc/ppp/auth-up - DSView detection
if [ -f /etc/ppp/auth-up ]; then
	if grep -q "auth-up.dsview" /etc/ppp/auth-up; then
		cp /etc/ppp/auth-up /tmp/auth-up
		grep -v "auth-up.dsview" /tmp/auth-up > /etc/ppp/auth-up
		NEEDSAVE=1
	fi
fi

# upgrade - fix problem with ldap.conf
if [ -f /etc/ldap.conf ]; then
	if ! grep -q "^tls_checkpeer" /etc/ldap.conf; then
		echo "tls_checkpeer no" >> /etc/ldap.conf
		NEEDSAVE=1
	fi
fi

# upgrade for 3.3.0 begin
FLAG_PSLAVE=0
FLAG_EXIT=0

cp /etc/portslave/pslave.conf /tmp/pslave.conf

if grep -q "\.billing_" /etc/portslave/pslave.conf; then
	# verify billing is configured
	if grep -q "^s[0-9]*\.protocol[ 	]*billing" /etc/portslave/pslave.conf; then
		echo "${DATE} - The support for billing was removed in this release." >> $LOGFILE
		echo "The support for billing was removed in this release."
		FLAG_EXIT=1
	else 
		# remove billing parameters
		grep -v "\.billing_" /tmp/pslave.conf > /tmp/pslave.temp
		mv /tmp/pslave.temp /tmp/pslave.conf
		FLAG_PSLAVE=1
	fi
fi

if grep -q "\.mr_" /etc/portslave/pslave.conf; then
	# verify modem replace is configured
	if grep -q "^s[0-9]*\.protocol[ 	]*modem_replace" /etc/portslave/pslave.conf; then
		echo "${DATE} - The support for modem replace was removed in this release." >> $LOGFILE
		echo "The support for modem replace was removed in this release."
		FLAG_EXIT=1
	else 
		# remove modem replace parameters
		grep -v "\.mr_" /tmp/pslave.conf > /tmp/pslave.temp
		mv /tmp/pslave.temp /tmp/pslave.conf
		FLAG_PSLAVE=1
	fi
fi

# verify raw_data_2way is configured
if grep -q "^s[0-9]*\.protocol[ 	]*raw_data_2way" /etc/portslave/pslave.conf; then
	echo "${DATE} - The support for raw_data_2way was removed in this release." >> $LOGFILE
	echo "The support for raw_data_2way was removed in this release."
	FLAG_EXIT=1
fi

# verify generic_dial is configured
if grep -q "^s[0-9]*\.protocol[ 	]*generic_dial" /etc/portslave/pslave.conf; then
	echo "${DATE} - The support for generic dial was removed in this release." >> $LOGFILE
	echo "The support for generic dial was removed in this release."
	FLAG_EXIT=1
fi

if [ $FLAG_EXIT == 1 ]; then
	echo "${DATE} - The upgrade configuration process cannot continue." >> $LOGFILE
	echo "The upgrade configuration process cannot continue."
	exit 1
fi

mv /tmp/pslave.conf /etc/portslave/pslave.conf

# remove host_port and host_idletime
if grep -q "\.host_" /etc/portslave/pslave.conf; then
	grep -v "\.host_" /etc/portslave/pslave.conf > /tmp/pslave.conf
	mv /tmp/pslave.conf /etc/portslave/pslave.conf
	FLAG_PSLAVE=1
fi

if [ $FLAG_PSLAVE == 1 ]; then
	echo "Updated Portslave - removed unsupported features."
	NEEDSAVE=1
fi

if grep -q "\/etc\/billing_" /etc/config_files; then
	grep -v "\/etc\/billing_" /etc/config_files > /tmp/config_files
	mv /tmp/config_files /etc/config_files
	NEEDSAVE=1
fi

if grep -q "\/etc\/generic-dial.conf" /etc/config_files; then
	grep -v "\/etc\/generic-dial.conf" /etc/config_files > /tmp/config_files
	mv /tmp/config_files /etc/config_files
	NEEDSAVE=1 
fi

if grep -q "\/daemon.sh\/gendial.sh" /etc/daemon_list; then
	grep -v "\/daemon.sh\/gendial.sh" /etc/daemon_list > /tmp/daemon_list
	mv /tmp/daemon_list /etc/daemons_list
	echo "Updated daemon_list - removed unsupported features."
	NEEDSAVE=1
fi

if grep -q "27 =" /etc/event_notif.conf; then
	sed "/^27 =*/d;/^28 =*/d;/^34 =*/d;/^41 =*/d;/^42 =*/d" /etc/event_notif.conf > /tmp/event_notif.conf
	sed '$a\43 = 2\
44 = 2\
45 = 2\
46 = 2\
47 = 2\
48 = 2\
49 = 2\
50 = 2\
51 = 2\
52 = 2\
53 = 2\
54 = 2\
55 = 2\
56 = 2\
57 = 2' /tmp/event_notif.conf > /etc/event_notif.conf
	NEEDSAVE=1
fi

# upgrade for 3.3.0 end


#Validate all modification
if [ $NEEDSAVE = 1 ]
then
    /bin/saveconf 
fi
